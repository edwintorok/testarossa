#!/usr/bin/env ocamlscript
Ocaml.packs := ["lwt"; "xen-api-client.lwt"; "re"; "ezxmlm"];
Ocaml.sources := ["../scripts/yorick.ml"; "test_common.ml"]
--
open Yorick
open Lwt
open Xen_api
open Xen_api_lwt_unix
open Test_common

let _ =
  let th =
    echo "Udpating vagrant box to latest version";
    update_box "host1";
    echo "Starting up host";
    start_all 1;
    echo "Setting up infrastructure VM for iSCSI export";
    let _ = setup_infra () in
    let hosts = get_hosts 1 in
    get_pool hosts
    >>= fun state ->
    echo "Creating shared iSCSI SR";
    get_iscsi_sr state
    >>= fun state ->
    begin match state.iscsi_sr with
    | Some (_, uuid) -> echo "iSCSI SR uuid: %s%!" uuid
    | None -> echo "No iSCSI SR!"
    end;
    echo "Running quicktest...";
    !?* (?|>) "vagrant ssh host1 -c 'sudo /opt/xensource/debug/quicktest'"
    |> fun (stdout, rc) ->
    echo "---[ BEGIN OUTPUT FROM QUICKTEST ]---";
    echo "%s" (trim stdout);
    echo "---[  END OUTPUT FROM QUICKTEST  ]---";
    begin match rc with
    | 0 -> echo "Quicktest finished successfully!";
    | _ ->
      echo "Quicktest failed (exit code %d)" rc;
      exit rc;
    end;
    Lwt.return ()
  in
  run_and_self_destruct th;
